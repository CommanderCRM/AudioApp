name: 'audioapp'
services:
  sql:
    build:
      context: .
    image: postgres:15.4
    container_name: sql_server
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - ..:/app
      - ./sqldocker/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./sqldocker/data:/var/lib/postgresql/data
  doctor:
    build:
      context: ./pydocker
      dockerfile: Dockerfile
    image: audiodocker_doctor
    container_name: doctor_server
    environment:
     - TESTING=${TESTING}
     - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - "48080:48080"
    depends_on:
      - sql
    volumes:
      - ..:/app
    working_dir: /app/audioserver
    tty: true
  patient:
    build:
      context: ./pydocker_patient
      dockerfile: Dockerfile
    image: audiodocker_patient
    container_name: patient_server
    environment:
     - TESTING=${TESTING}
     - LOG_LEVEL=${LOG_LEVEL}
    ports:
      - "443:443"
    depends_on:
      - doctor
      - sql
    volumes:
      - ..:/app
    working_dir: /app/audioserver
    tty: true
  client:
    build:
      context: ../audioclient
      dockerfile: Dockerfile
    image: client
    container_name: client
    environment:
      - REACT_APP_BASE_URL_DOCTOR=http://127.0.0.1:48080/
      - REACT_APP_BASE_URL_CLIENT=http://127.0.0.1:443/
    ports:
      - "80:3000"
    depends_on:
      - doctor
      - patient
    volumes:
      - ../audioclient:/app
      - /app/node_modules
    working_dir: /app
    tty: true
